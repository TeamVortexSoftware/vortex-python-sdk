name: Test Python Package

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
      working-directory: packages/vortex-python-sdk

    - name: Lint with ruff
      run: ruff check src/
      working-directory: packages/vortex-python-sdk

    - name: Format check with black
      run: black --check src/
      working-directory: packages/vortex-python-sdk

    - name: Import sorting check with isort
      run: isort --check-only src/
      working-directory: packages/vortex-python-sdk

    - name: Type check with mypy
      run: mypy src/
      working-directory: packages/vortex-python-sdk

    - name: Test with pytest
      run: pytest --cov=vortex_sdk --cov-report=xml
      working-directory: packages/vortex-python-sdk

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      with:
        file: packages/vortex-python-sdk/coverage.xml
        flags: unittests
        name: codecov-umbrella